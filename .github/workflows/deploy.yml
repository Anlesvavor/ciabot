name: Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - dev

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'dev'
      

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch || github.ref_name }}

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Set environment variables
      run: |
        if [ "${{ github.event.inputs.branch || github.ref_name }}" == "dev" ]; then
          echo "Using development environment"
          echo "POSTGRES_HOST=db" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "CIABOT_TOKEN=${{ secrets.CIABOT_TOKEN }}" >> .env
          echo "CIABOT_SETTINGS_PATH=${{ secrets.CIABOT_SETTINGS_PATH }}" >> .env
          echo "CIABOT_ADMIN_ID=${{ secrets.CIABOT_ADMIN_ID }}" >> .env
          echo "CIABOT_GUILD_ID=${{ secrets.CIABOT_GUILD_ID }}" >> .env
          echo "PAPERTRAIL_LOG_DESTINATION=${{ secrets.PAPERTRAIL_LOG_DESTINATION }}" >> .env
          echo "PAPERTRAIL_LOG_PORT=${{ secrets.PAPERTRAIL_LOG_PORT }}" >> .env
          export DEPLOY_PATH="/root/ciabot-public"
        else
          echo "Using adhoc environment"
          echo "POSTGRES_HOST=db" >> .env
          echo "CIABOT_SETTINGS_PATH=${{ secrets.CIABOT_SETTINGS_PATH }}" >> .env
          echo "CIABOT_ADMIN_ID=${{ secrets.CIABOT_ADMIN_ID }}" >> .env
          echo "CIABOT_GUILD_ID=${{ secrets.CIABOT_GUILD_ID }}" >> .env
          echo "POSTGRES_DB=${{ secrets.ADHOC_POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.ADHOC_POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.ADHOC_POSTGRES_PASSWORD }}" >> .env
          echo "CIABOT_TOKEN=${{ secrets.CIABOT_TOKEN_ADHOC }}" >> .env
          echo "PAPERTRAIL_LOG_DESTINATION=${{ secrets.PAPERTRAIL_LOG_DESTINATION_ADHOC }}" >> .env
          echo "PAPERTRAIL_LOG_PORT=${{ secrets.PAPERTRAIL_LOG_PORT_ADHOC }}" >> .env
          export DEPLOY_PATH="/root/ciabot-public-adhoc"
        fi

    - name: Build Docker image
      run: docker compose --env-file .env build

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DO_SSH_KEY }}

    - name: Deploy to DigitalOcean Droplet
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} \
        'docker compose down || true'

        scp -o StrictHostKeyChecking=no -r * ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} \
        :${{ github.event.inputs.branch == 'dev' && '/root/ciabot-public' || '/root/ciabot-public-adhoc' }}

        ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} \
        'cd $DEPLOY_PATH && docker-compose up -d --build'
